name: Deploy IAM Service

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        
    - name: Run tests
      run: |
        cd backend
        python run_tests.py
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
        
    # Render Deployment - uncomment when ready to deploy
    - name: Deploy to Render
      if: success()
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        # Trigger Render deploy hook (this will be updated when you set up Render)
        curl -X POST https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys \
          -H "Authorization: Bearer $RENDER_API_KEY"
          
    # Alternatively, for Railway deployment
    # - name: Deploy to Railway
    #   if: success()
    #   env:
    #     RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    #   run: |
    #     npm install -g @railway/cli
    #     railway up --service=iam-backend
        
    # Notify on deploy success/failure
    - name: Notify on success
      if: success()
      run: |
        echo "Deployment completed successfully!"
        # Add notification logic (e.g., Slack webhook) if needed
        
    - name: Notify on failure
      if: failure()
      run: |
        echo "Deployment failed!"
        # Add notification logic (e.g., Slack webhook) if needed
